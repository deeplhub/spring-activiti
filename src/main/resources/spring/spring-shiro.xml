<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
    http://www.springframework.org/schema/beans/spring-beans.xsd"
	default-lazy-init="true">

	<description>Shiro安全配置</description>

	<!--安全管理器 -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<!--设置自定义Realm -->
		<property name="realm" ref="shiroDbRealm" />

		<!--将缓存管理器，交给安全管理器(Spring提供的Ehcache实现的缓存管理器) -->
		<!-- <property name="cacheManager" ref="springCacheManager" /> -->
		
		<!-- Shiro提供的Ehcache实现的缓存管理器 -->
		<property name="cacheManager" ref="shiroCacheManager" />

		<!-- 记住密码管理 -->
		<property name="rememberMeManager" ref="rememberMeManager" />
	</bean>

	<!-- 自定义的 Realm -->
	<bean id="shiroDbRealm" class="com.xh.activiti.commons.shiro.ShiroDbRealm">

		<!-- 自定义配置，constructor-arg：通过构造函数注入。（ 在ShiroDbRealm的构造方法里） -->
		<!-- 用户授权信息Cache, 采用spring-cache -->
		<!-- <constructor-arg index="0" name="cacheManager" ref="springCacheManager" /> -->
		
		<!-- Shiro提供的Ehcache实现的缓存管理器 -->
		<property name="cacheManager" ref="shiroCacheManager" />


		<!-- 密码错误5次锁定半小时 -->
		<constructor-arg index="1" name="matcher" ref="retryLimitCredentialsMatcher" />

		<!-- 配置缓存相关 -->
		<!-- 启用缓存 -->
		<property name="cachingEnabled" value="true" />
		<!-- 开启认证缓存 -->
		<property name="authenticationCachingEnabled" value="true" />
		<!-- 指定认证缓存的名字(与 ehcache.xml 中声明的相同) -->
		<property name="authenticationCacheName" value="authenticationCache" />
		<!--开启授权缓存 -->
		<property name="authorizationCachingEnabled" value="true" />
		<!-- 指定授权缓存的名字(与 ehcache.xml 中声明的相同) -->
		<property name="authorizationCacheName" value="authorizationCache" />
	</bean>

	<!-- 密码错误5次锁定半小时 -->
	<bean id="retryLimitCredentialsMatcher" class="com.xh.activiti.commons.shiro.RetryLimitCredentialsMatcher">

		<!-- 用户授权信息Cache, 采用spring-cache -->
		<!-- <constructor-arg ref="springCacheManager" /> -->
		<constructor-arg ref="shiroCacheManager" />

		<!-- 调用ehcache.xml文件里的cacheName -->
		<property name="retryLimitCacheName" value="halfHour" />
		<property name="passwordHash" ref="passwordHash" />
	</bean>

	<!-- shiro密码加密配置 -->
	<bean id="passwordHash" class="com.xh.activiti.commons.shiro.PasswordHash">
		<!-- 密码加密 1次md5,增强密码可修改此处 -->
		<property name="algorithmName" value="md5" />
		<!-- 默认值是1，可省略 -->
		<property name="hashIterations" value="1" />
	</bean>

	<!-- rememberMe管理器,cipherKey生成见{@code Base64Test.java} -->
	<bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">
		<!-- rememberMe cookie加密的密钥 建议每个项目都不一样 默认AES算法 密钥长度（128 256 512 位） -->
		<property name="cipherKey" value="#{T(org.apache.shiro.codec.Base64).decode('5aaC5qKm5oqA5pyvAAAAAA==')}" />
		<!-- 记住密码Cookie -->
		<property name="cookie" ref="rememberMeCookie" />
	</bean>

	<!-- 记住密码Cookie -->
	<bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
		<!-- 疑问：rememberMe这个在这里是做什么的？ -->
		<constructor-arg value="rememberMe"></constructor-arg>
		<property name="httpOnly" value="true"></property>
		<!-- 7天,采用spring el计算方便修改[细节决定成败]！ -->
		<property name="maxAge" value="#{7 * 24 * 60 * 60}" />
	</bean>


	<!-- Shiro Filter -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<!-- 安全管理器 -->
		<property name="securityManager" ref="securityManager"></property>
		<!-- 默认的登陆访问url -->
		<property name="loginUrl" value="/login"></property>
		<!-- 登陆成功后跳转的url -->
		<property name="successUrl" value="/index"></property>
		<!-- 没有权限跳转的url -->
		<property name="unauthorizedUrl" value="/unauth"></property>
		<property name="filterChainDefinitions">
			<value>
				<!-- anon 不需要认证； authc 需要认证； user 验证通过或RememberMe登录的都可以 -->
				/commons/** = anon
				/static/** = anon
				<!-- /admin/**=authc -->
				/login = anon
				/** = authc
			</value>
		</property>
		<property name="filters">
			<map>
				<entry key="user" value-ref="ajaxSessionFilter" />
			</map>
		</property>
	</bean>

	<!-- ajax session超时时处理 -->
	<bean id="ajaxSessionFilter" class="com.xh.activiti.commons.shiro.ShiroAjaxSessionFilter" />

	<!-- 生命周期, 保证实现了Shiro内部lifecycle函数的bean执行 -->
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />

	<!-- 启用shrio 控制器授权注解拦截方式 -->
	<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<property name="securityManager" ref="securityManager" />
	</bean>

	<!-- AOP式方法级权限检查 -->
	<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor">
		<property name="proxyTargetClass" value="true" />
	</bean>
</beans>